library(dplyr)
library(ggplot2)
bike <- read.csv("bikeshare.csv")
head(bike)
bike.scatter <- bike %>%
ggplot2(aes(x = temp, y = count)) + geom_point(alpha = 0.4)
bike.scatter <- bike %>%
ggplot(aes(x = temp, y = count)) + geom_point(alpha = 0.4)
bike.scatter
bike.scatter <- bike %>%
ggplot(aes(x = temp, y = count)) + geom_point(alpha = 0.4, color = "blue")
bike.scatter
bike.scatter <- bike %>%
ggplot(aes(x = temp, y = count)) + geom_point(alpha = 0.2, color = "blue")
bike.scatter
bike.scatter <- bike %>%
ggplot(aes(x = temp, y = count)) +
geom_point(alpha = 0.2, aes(color = temp)) +  theme_bw()
bike.scatter
bike.datetime <- bike %>%
as.POSIXct(bike$datetime)
bike.datetime <- as.POSIXct(bike$datetime)
bike.datetime
bike$datetime <- as.POSIXct(bike$datetime)
bike
str(bike)
count.datetime.scatter <- bike %>%
ggplot(aes(x = datetime, y = count)) +
geom_point(alpha = 0.2, aes(color = temp)) + theme_bw()
count.datetime.scatter
count.datetime.scatter <- bike %>%
ggplot(aes(x = datetime, y = count)) +
geom_point(alpha = 0.2, aes(color = temp)) +
scale_color_continuous(low='#55D8CE',high='#FF6E2E') +
theme_bw()
count.datetime.scatter
help("cor")
cor(bike$count, bike$temp)
# or:
cor(bike[,c('temp','count')]) # to produce a correlation table
count.temp.cor <- cor(bike$count, bike$temp)
count.temp.cor
count.temp.cor.table <- cor(bike[,c('temp','count')]) # to produce a
# correlation table
count.temp.cor.table
count.season.boxplot <- bike %>%
ggplot(aes(factor(season), count)) + geom_boxplot()
count.season.boxplot
count.season.boxplot.ex <- bike %>%
ggplot(aes(season, count)) + geom_boxplot()
count.season.boxplot.ex
rm(count.season.boxplot.ex) # to remove example above
# just an example w/o "factoring" season
count.season.boxplot.ex <- bike %>%
ggplot(aes(season, count)) + geom_boxplot(aes(color = factor(season)))
rm(count.season.boxplot.ex) # to remove example above
count.season.boxplot <- bike %>%
ggplot(aes(factor(season), count)) + geom_boxplot(aes(color = factor(season)))
count.season.boxplot
count.season.boxplot <- bike %>%
ggplot(aes(factor(season), count)) +
geom_boxplot(aes(color = factor(season))) +
theme_bw()
count.season.boxplot
time.stamp <- bike$datetime[4]
format(time.stamp, "%H")
bike.hour <- bike$datetime %>%
format("%H")
bike.hour
bike.test <- bike
head(bike.test)
bike.test$hour <- bike.test$datetime %>%
format("%H")
bike.test
head(bike.test)
bike$hour <- bike$datetime %>%
format("%H")
head(bike)
# or:
bike$hour <- bike$datetime %>%
sapply(function(x){format(x, "%H")})
head(bike)
help("filter")
count.hour.filter <- bike %>%
filter(workingday == 1)
count.hour.scatter <- count.hour.filter %>%
ggplot(aes(hour, count)) +
geom_point(aes(color = temp)) + theme_bw()
count.hour.scatter
count.hour.scatter <- count.hour.filter %>%
ggplot(aes(hour, count)) +
geom_point(aes(color = temp)) +
scale_color_continuous(low='#55D8CE',high='#FF6E2E') +
theme_bw()
count.hour.scatter
pl <- bike %>%
ggplot(filter(workingday == 1), aes(hour,count))
pl <- pl +
geom_point(position = position_jitter(w = 1, h = 0), aes(color = temp),
alpha = 0.4)
pl <- pl +
scale_color_gradient(colors = c('dark blue','blue','light blue','light green',
'yellow','orange', 'red'))
pl + theme_bw()
# or:
pl <- bike %>%
ggplot(filter(workingday == 1), aes(hour,count))
# or:
pl <- ggplot(bike, filter(workingday == 1), aes(hour,count))
head(bike)
# or:
pl <- ggplot(bike, filter(workingday == 1), aes(hour,count))
# or:
pl <- ggplot(bike, filter(bike$workingday == 1), aes(hour,count))
# or:
pl <- ggplot(filter(bike,workingday==1),aes(hour,count))
# or:
pl <- ggplot(filter(bike, workingday == 1),aes(hour, count))
# or:
pl <- bike %>%
ggplot(filter(workingday == 1),aes(hour, count))
# or:
pl <- ggplot(filter(bike, workingday == 1),aes(hour, count))
pl <- ggplot(filter(bike, workingday == 1),aes(hour, count))
pl <- pl +
geom_point(position = position_jitter(w = 1, h = 0), aes(color = temp),
alpha = 0.4)
pl <- pl +
scale_color_gradient(colors = c('dark blue','blue','light blue','light green',
'yellow','orange', 'red'))
pl + theme_bw()
pl <- ggplot(filter(bike, workingday == 1),aes(hour, count))
pl <- pl +
geom_point(position = position_jitter(w = 1, h = 0), aes(color = temp),
alpha = 0.4)
pl <- pl +
scale_color_gradient(colours = c('dark blue','blue','light blue','light green',
'yellow','orange', 'red'))
pl + theme_bw()
pl <- ggplot(filter(bike, workingday == 1),aes(hour, count))
pl <- pl +
geom_point(position = position_jitter(w = 1, h = 0), aes(color = temp),
alpha = 0.4)
pl <- pl +
scale_color_gradient(colours = c('dark blue','blue','light blue','light green',
'yellow','orange', 'red'))
pl + theme_bw()
pl <- pl +
scale_color_gradient(low='#55D8CE',high='#FF6E2E')
pl + theme_bw()
count.hour.filter.offdays <- bike %>%
filter(workingday == 0)
count.hour.scatter.offdays <- count.hour.filter.offdays %>%
ggplot(aes(hour, count)) +
geom_point(aes(color = temp), position = position_jitter(w = 1, h = 0),
alpha = 0.4) +
scale_color_continuous(low='#55D8CE',high='#FF6E2E') +
theme_bw()
count.hour.scatter.offdays
pl + theme_bw()
count.hour.scatter.offdays
temp.model <- lm(count ~ temp, bike)
summary(temp.model)
# Bike rentals at 25ÂºC
6.0462 + (25 * 9.1705)
predict(temp.model,temp.test)
temp.test <- data.frame(temp=c(25))
predict(temp.model,temp.test)
bike$hour <- sapply(bike$hour,as.numeric)
str(bike)
new.model <- lm(count ~ . -casual - registered -datetime -atemp, bike)
summary(new.model)
