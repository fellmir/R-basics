install.packages("dplyr")
install.packages("nycflights13")
library(dplyr)
library(nycflights13)
head(flights)
summary(flights)
install.packages("rstudioapi")
install.packages("rstudioapi")
install.packages("rstudioapi")
rstudioapi::addTheme(night_owlish, apply = TRUE)
night_owlish <- "https://raw.githubusercontent.com/batpigandme/night-owlish/master/rstheme/night-owlish.rstheme"
rstudioapi::addTheme(night_owlish, apply = TRUE)
yule_theme <- "https://raw.githubusercontent.com/gadenbuie/yule-rstudio/master/Yule-RStudio.rstheme"
rstudioapi::addTheme(yule_theme, apply = TRUE)
oceanic_theme <- "https://raw.githubusercontent.com/gadenbuie/oceanic-eighties/master/oceanic-eighties.rstheme"
rstudioapi::addTheme(oceanic_theme, apply = TRUE)
my_theme <- "https://raw.githubusercontent.com/brunaw/my-theme/master/my-theme.rstheme"
rstudioapi::addTheme(my_theme, apply = TRUE)
remotes::install_github("anthonynorth/rscodeio")
rscodeio::install_theme()
rscodeio::install_theme()
remotes::install_github("anthonynorth/rscodeio")
remotes::install_github("anthonynorth/rscodeio", force = TRUE)
rstudioapi::addTheme("https://raw.githubusercontent.com/batpigandme/night-owlish/master/rstheme/night-owlish.rstheme", apply = TRUE)
library(dplyr)
library(nycflights13)
head(flights)
summary(flights)
head(filter(flights, month == 11, day == 3, carrier == "AA"))
# or:
head(flights[flights$month == 11 & flights$day == 3 & flights$carrier == "AA",])
slice(flights, 1:10)
head(arrange(flights, year, month, day, air_time))
head(arrange(flights, year, month, day, arr_time))
head(arrange(flights, year, month, day, desc(arr_time))
head(arrange(flights, year, month, day, desc(arr_time)))
head(arrange(flights, year, month, day, desc(arr_time)))
head(select(flights, carrier))
head(select(flights, carrier,arr_time))
head(select(flights, carrier,arr_time, month))
head(rename(flights, airline_carrier = carrier))
distinct(select(flights, carrier))
head(mutate(flights, new_col = arr_delay - dep_delay))
head(transmute(flights, new_col = arr_delay - dep_delay))
summarise(flights, avg_air_time == mean(air_time, na.rm = TRUE))
summarise(flights, mean(air_time, na.rm = TRUE) = avg_air_time)
summarise(flights, mean(air_time, na.rm = TRUE) = avg_air_time)
summarise(flights, avg_air_time = mean(air_time, na.rm = TRUE))
summarise(flights, total_time = sum(air_time, na.rm = TRUE))
sample_n(flights, 10)
sample_frac(flights, 0.01)
sample_frac(flights, 0.00001)
sample_frac(flights, 0.0001)
library(dplyr)
df <- mtcars
arrange(sample_n(filter(df, mpg > 20), size = 5), desc(mpg))
result <- arrange(sample_n(filter(df, mpg > 20), size = 5), desc(mpg))
result
a <- filter(df, mpg > 20)
b <- sample_n(a, size = 5)
result <- arrange(b, desc(mpg))
result
result <- df %>% filter(mpg > 20) %>% sample_n(size = 5) %>% arrange(desc(mpg))
result
head(mtcars)
mtcars %>%
filter(mpg > 20, cyl == 6)
mtcars %>%
arrange(cyl, desc(wt))
mtcars %>%
select(mpg, hp)
mtcars %>%
select(distinct(gear))
mtcars %>%
distinct(select(gear))
head(mtcars)
mtcars %>%
distinct %>%
select(gear)
mtcars %>%
mutate(performance = hp/wt)
mtcars %>%
transmute(mean_mpg = mean(mpg))
mtcars %>%
summarise(avg_mpg = mean(mpg))
mtcars %>%
distinct(select(gear))
mtcars %>%
distinct %>%
select(gear)
mtcars %>%
filter(cyl == 6) %>%
summarise(avg_hp = mean(hp))
# or:
mtcars %>%
filter(cyl == 6) %>%
summarise(std_hp = stvd(hp))
# or:
mtcars %>%
filter(cyl == 6) %>%
summarise(std_hp = sd(hp))
# or:
distinct(select(mtcars,gear))
install.packages("tidyr")
install.packages("data.table")
library(tidyr)
library(data.table)
comp <- c(1,1,1,2,2,2,3,3,3)
yr <- c(1998,1999,2000,1998,1999,2000,1998,1999,2000)
q1 <- runif(9, min=0, max=100)
q2 <- runif(9, min=0, max=100)
q3 <- runif(9, min=0, max=100)
q4 <- runif(9, min=0, max=100)
df <- data.frame(comp=comp,year=yr,Qtr1 = q1,Qtr2 = q2,Qtr3 = q3,Qtr4 = q4)
df
.rs.restartR()
gather(df, Quarter, Revenue, Qtr1:Qtr4)
install.packages("data.table")
install.packages("data.table")
library(tidyr)
library(data.table)
gather(df, Quarter, Revenue, Qtr1:Qtr4) # "Quarter" collapses headers into a
# column; "Revenue" takes the values from the previous Qtr1:Qtr4 columns
df %>%
gather(Quarter, Revenue, Qtr1:Qtr4)
stocks
stocks
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
stocks.gathered <- stocks %>%
gather(Stock, Price, X:Z)
stocks.gathered
stocks.gathered %>%
spread(Stock, Price)
# observations
stocks.gathered %>%
spread(time, Price)
df <- data.frame(x=c(NA, "a.x", "b.y", "c.z."))
df
df <- data.frame(new_col=c(NA, "a.x", "b.y", "c.z."))
df
df %>%
separate(new.col, c("ABC", "XYZ"))
df %>%
separate(new_col, c("ABC", "XYZ"))
df <- data.frame(new_col=c(NA, "a/x", "b/y", "c/z"))
df
df %>%
separate(new_col, c("ABC", "XYZ"), sep = "/")
# or:
df %>%
separate(new_col, c("ABC", "XYZ"))
df.sep <- df %>%
separate(new_col, c("ABC", "XYZ"))
df.sep
df.sep %>%
unite(new_joined_col,ABC,XYZ)
# or:
df.sep %>%
unite(new_joined_col,ABC,XYZ, sep = "---")
